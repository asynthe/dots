# ------------------------ Configuration ------------------------
setw -g mode-keys vi
set -g base-index 1
set -g history-limit 10000
set -g set-clipboard on
set -g mouse on
#set-option -g default-shell /run/current-system/sw/bin/zsh # NixOS
set -g default-terminal "tmux-256color"

# Image Preview
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Status Bar
set -g status off
bind t set -g status
set-option -g status-position top

set -g status-bg default
set-option -g status-style fg=color20,bg=default

set -g status-right "${wg_funkyprefix}"
#set -g pane-active-border-style fg='#6272a4'
#set -g pane-border-style-fg='#ff79c6'
#set -g status-right "${wg_funkyprefix} ${wg_date} ${wg_time}"
#wg_prefix="#{?client_prefix,<Prefix>,}"
#wg_date="#[fg=color20,bold,bg=default]%d-%b-%Y#[none]"
#wg_time="#[fg=color20,bold,bg=default]%H:%M"
#wg_date="#[fg=color231,bold,bg=default]%d-%b-%Y#[none]"
#wg_time="#[fg=color231,bold,bg=default]%H:%M"
wg_funkyprefix="#{?client_prefix,#[reverse]● #[noreverse],#[reverse]○ #[noreverse]}"

# Prefix
unbind C-b
set -g prefix C-x
bind C-x send-prefix
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux configuration file"

# Keybinds
#bind d display-panes
bind space next-layout
unbind q
unbind s
bind b break-pane
bind Q kill-window
bind e confirm kill-window \; switch-client -T prefix
bind E confirm kill-server
#bind [ previous-session
#bind ] next-session
#bind ";" previous-session
#bind "'" next-session
bind Tab choose-tree
bind N new-session
bind Q detach
#bind K textconfirm kill-session
#bind -n C-b send-keys C-l
#bind -n C-w send-keys C-l \; run-shell "sleep .3s" \; clear-history

bind-key o command-prompt -p "join-pane from:" "join-pane -s '%%'"
bind-key p command-prompt -p "send pane to:" "join-pane -t '%%'"

bind '|' split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"

bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

bind -n C-z resize-pane -Z

bind J swap-pane -D \; switch-client -T prefix
bind K swap-pane -U \; switch-client -T prefix

bind -n C-n swap-pane -D

bind h resize-pane -L 3 \; switch-client -T prefix
bind j resize-pane -D 2 \; switch-client -T prefix
bind k resize-pane -U 2 \; switch-client -T prefix
bind l resize-pane -R 3 \; switch-client -T prefix

bind C-h resize-pane -L 3 \; switch-client -T prefix
bind C-j resize-pane -D 2 \; switch-client -T prefix
bind C-k resize-pane -U 2 \; switch-client -T prefix
bind C-l resize-pane -R 3 \; switch-client -T prefix

#bind C-k kill-pane
#bind k kill-pane

unbind ,
unbind .
bind , previous-window \; switch-client -T prefix
bind . next-window \; switch-client -T prefix

bind [ select-window -t -1
bind ] select-window -t +1

bind-key 1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key 2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key 3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key 4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key 5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key 6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key 7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key 8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key 9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind-key 0 if-shell 'tmux select-window -t :0' '' 'new-window -t :0'

#bind-key 1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1 -c "#{pane_current_path}"'
#bind-key 2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2 -c "#{pane_current_path}"'
#bind-key 3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3 -c "#{pane_current_path}"'
#bind-key 4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4 -c "#{pane_current_path}"'
#bind-key 5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5 -c "#{pane_current_path}"'
#bind-key 6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6 -c "#{pane_current_path}"'
#bind-key 7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7 -c "#{pane_current_path}"'
#bind-key 8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8 -c "#{pane_current_path}"'
#bind-key 9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9 -c "#{pane_current_path}"'
#bind-key 0 if-shell 'tmux select-window -t :0' '' 'new-window -t :0 -c "#{pane_current_path}"'

#bind-key 1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1' \; switch-client -T prefix
#bind-key 2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2' \; switch-client -T prefix
#bind-key 3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3' \; switch-client -T prefix
#bind-key 4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4' \; switch-client -T prefix
#bind-key 5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5' \; switch-client -T prefix
#bind-key 6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6' \; switch-client -T prefix
#bind-key 7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7' \; switch-client -T prefix
#bind-key 8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8' \; switch-client -T prefix
#bind-key 9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9' \; switch-client -T prefix
#bind-key 0 if-shell 'tmux select-window -t :0' '' 'new-window -t :0' \; switch-client -T prefix
