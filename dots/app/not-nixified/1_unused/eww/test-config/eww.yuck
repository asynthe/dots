;; VARIABLES
;;---------------------------------------

;;(defpoll SONG :interval "1s" `scripts/music_info --song`)
;;(defpoll COVER :interval "1s" `scripts/music_info --cover`)
;; (defpoll COVER :interval "1s" `scripts/test_art.sh`)
;;(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
;;(defpoll STATUS :interval "1s" `scripts/music_info --status`)
;;(defpoll music :interval "1s" "scripts/getmusic")


(defpoll bat_label :interval "1s" "scripts/getbat_status")
(defpoll battery :interval "1s" "scripts/getbat")
(defpoll volume :interval "1s" "scripts/getvol")
(defpoll date :interval "1s" "date '+%d/%m %A'")
(defpoll time :interval "1s" "date '+ %H:%M:%S'")

;; Battery
(defpoll BATICON :interval "1s" 'scripts/battery --icon')
(defpoll BATPERC :interval "1m" 'scripts/battery --perc')

;; Volume
(defpoll VOLICON :interval "1s" 'scripts/volume --icon')
(defpoll VOLUME :interval "1s" 'scripts/volume --get')

;; Network
(defpoll WIFIICON :interval "1s" 'scripts/check-network --icon')
(defpoll NETSTAT :interval "1s" 'scripts/check-network --stat')

;; WIDGETS
;;---------------------------------------

(defwidget bar []

	;;(centerbox :style "background-image: url('${BARIMG}');"
	(centerbox
    (left)
		(clock)
		))

(defwidget right []
	(box :orientation "h"
		 :space-evenly false
         :halign "end"
		 :class "right_modules"
(audiostuff)
(sidestuff)
(batterystuff)
))


;; BATTERY
(defwidget battery []
  (box :class "battery"
       :orientation "h"
       :space-evenly false
       :halign "left"
    {battery != "" ? " ÔâÅ  ${battery}%" : ""}))

(defwidget batterystuff []
	(box :orientation "h"
		 :space-evenly false
         :halign "end"
		 :class "right_modules"
(bat_label)
(battery_metric)
))



(deflisten workspace "scripts/workspace")
(defwidget workspaces []
(literal :content workspace))


;; WINDOW
;;---------------------------------------

(defwindow bar
           :exclusive true ;; Reserve space for the window
           :monitor 0
	   :windowtype "dock"
	   :stacking "fg" ;; fg,bg,overlay,bottom
	   :focusable false ;; allows keyboard, soft lock in Hyprland
	   :geometry (geometry :x "0%"
	                       :y "0%"
			       :width "100%"
			       :height "25px"
			       :anchor "top center")
	   :reserve (struts :side "top" :distance "4%")
	   (bar))

;; anchor
;; just center or
;; combinations of: top, center, bottom + left, center, right
