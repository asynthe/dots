:PROPERTIES:
:ID:       8656be5a-6d9f-4667-8082-cefd50e710e6
:ROAM_ALIASES: zsh
:END:
#+title: Zsh configuration (zshrc)

Relics from X11
#+begin_src bash
#alias waifu='nsxiv -t ~/main/ベンハミン/ero/3d_girls' # FIXING
#alias waifu-irl='nsxiv -t ~/sync/sys/wallpapers/2d-girls' # FIXING
#alias wall-anime-random=

# Wallpaper - Nitrogen [X11]
#alias xinit='nvim ~/.xinitrc'
#alias xwall='fd . /home/asynthe/sync/system/wallpaper -e jpg -e png | fzf | xargs feh' # INSTALL FEH AND FIX

# xrandr commands
#alias hdmi='xrandr --output eDP-1 --mode 1920x1080 --rate 144.00 && xrandr --output HDMI-1-0 --primary --mode 1920x1080 --rate 60.00 --right-of eDP-1'
#alias hdmi-bigtv='xrandr --output eDP-1 --primary --mode 1920x1080 --rate 144.00 --output HDMI-1-0 --mode 1920x1080 --rate 60.00 --right-of eDP-1'
#alias hdmi-off='xrandr --output HDMI-1-0 --off'
#+end_src

* Table of Contents :toc:
- [[#resources][Resources]]
- [[#what-is-zsh][What is ZSH]]
- [[#install][Install]]
- [[#usage][Usage]]
- [[#tips][Tips]]
  - [[#configzsh-as-config-directory][~/.config/zsh as config directory]]
- [[#configuration][Configuration]]
  - [[#path][PATH]]
  - [[#export][Export]]
  - [[#history][History]]
  - [[#screensaver---trapalrm][Screensaver - TRAPALRM]]
  - [[#prompt---starship][Prompt - Starship]]
  - [[#prompt---custom-disabled][Prompt - Custom (Disabled)]]
  - [[#direnv][direnv]]
  - [[#keybinds][Keybinds]]
- [[#plugins][Plugins]]
  - [[#vi-mode-zsh-vi-mode][Vi Mode (zsh-vi-mode)]]
  - [[#autocomplete-zsh-autocomplete][Autocomplete (zsh-autocomplete)]]
  - [[#autosuggestions-zsh-autosuggestions-disabled-for-now][Autosuggestions (zsh-autosuggestions) [Disabled for now]]]
  - [[#syntax-highlighting-zsh-syntax-highlighting][Syntax Highlighting (zsh-syntax-highlighting)]]
  - [[#pywal][pywal]]
- [[#aliases][Aliases]]
  - [[#system][System]]
  - [[#package-manager][Package Manager]]
  - [[#main][Main]]
  - [[#mistake][Mistake]]
  - [[#useful][Useful]]
  - [[#apps][Apps]]
  - [[#dev][Dev]]
  - [[#wallpaper---swww--mpvpaper-wayland][Wallpaper - swww / mpvpaper [Wayland]]]
  - [[#video-wallpaper---mpvpaper-wayland][Video Wallpaper - mpvpaper [Wayland]]]
  - [[#scripts][Scripts]]
  - [[#networking][Networking]]
  - [[#flatpak--other][Flatpak / Other]]
  - [[#other][Other]]
  - [[#wms][WMs]]
  - [[#book][Book]]
  - [[#testing][Testing]]
- [[#app][App]]
  - [[#lf][lf]]
  - [[#yazi][yazi]]

* Resources

*Website*
+ [[https://en.wikipedia.org/wiki/Z_shell][Wikipedia page]]
+ [[https://wiki.archlinux.org/title/Zsh][arch wiki]]
+ [[https://wiki.gentoo.org/wiki/Zsh][gentoo wiki]]
+ [[https://wiki.archlinux.org/title/Command-line_shell][Command-line shell - arch wiki]]
+ [[https://wiki.gentoo.org/wiki/Shell][Shell - gentoo wiki]]

*Posts*
+ [[https://smarttech101.com/zsh-highlighting-autosuggestion-themes-binding-alias-fzf][zsh: highlighting, autosuggestion, themes, binding, alias, fzf - SmartTech101]]

*Youtube*
 [[https://www.youtube.com/watch?v=rgdR27KMxpo][Customize your ZSH (auto-suggestions, prompt theme, syntax highlighting and more) - The Rad Lectures]]

* What is ZSH

- [[https://en.wikipedia.org/wiki/Z_shell][Wikipedia page]]
- [[https://smarttech101.com/zsh-highlighting-autosuggestion-themes-binding-alias-fzf][zsh: highlighting, autosuggestion, themes, binding, alias, fzf - SmartTech101]]

* Install

Arch -> ...
Gentoo -> ...
Nix -> ...

* Usage

Enter the shell with
*$ zsh*

* Tips
** ~/.config/zsh as config directory

Add the next to *~/.zshenv*, this will be the only file on our home folder.
*export ZDOTDIR = ~/.config/zsh*

* Configuration

If not running interactively, don't do anything

#+begin_src bash
[[ $- != *i* ]] && return
#+end_src

** PATH

Example: *export PATH="$PATH:...* or *export

#+begin_src bash
export PATH="$HOME/sync/dots/script/bin:$PATH"
export PATH="$HOME/sync/dots/script/bash/git:$PATH"

#export PATH="$HOME/.cargo/bin:$PATH"
#export PATH="$HOME/.local/bin:$PATH"
#export PATH="/usr/lib/ccache/bin:${PATH}"
#+end_src

If found, then add to *PATH*.
#+begin_src bash
if [ -d "$HOME/.bin" ] ;
  then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
  then PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.emacs.d/bin" ] ;
  then PATH="$HOME/.emacs.d/bin:$PATH"
fi

if [ -d "$HOME/.config/emacs/bin/" ] ;
  then PATH="$HOME/.config/emacs/bin/:$PATH"
fi

if [ -d "$HOME/Applications" ] ;
  then PATH="$HOME/Applications:$PATH"
fi

if [ -d "/var/lib/flatpak/exports/bin/" ] ;
  then PATH="/var/lib/flatpak/exports/bin/:$PATH"
fi
#+end_src

** Export

If there's a XDG set, override it.

#+begin_src bash
if [ -z "$XDG_CONFIG_HOME" ] ; then
    export XDG_CONFIG_HOME="$HOME/.config"
fi
if [ -z "$XDG_DATA_HOME" ] ; then
    export XDG_DATA_HOME="$HOME/.local/share"
fi
if [ -z "$XDG_CACHE_HOME" ] ; then
    export XDG_CACHE_HOME="$HOME/.cache"
fi
#+end_src

Terminal configuration.

#+begin_src bash
export TERM='xterm-256color'
export QT_STYLE_OVERRIDE=adwaita-dark
#+end_src

Environment variables.

#+begin_src bash
export EDITOR='nvim'
export BROWSER='firefox'
export READER='zathura'
export FILE='lf'
#+end_src

Set up configuration files environment variables.

#+begin_src bash
alias ssh='ssh -i $HOME/sync/pass/ssh/thinkpad/thinkpad'
export GNUPGHOME=$HOME/sync/pass/gpg # default is $HOME/.gnupg
export PASSWORD_STORE_DIR=$HOME/sync/pass/pass # default is $HOME/.password-store

export STARSHIP_CONFIG=$HOME/.config/starship/starship.toml # Default is $HOME/.config/starship.toml, also $ZDOTDIR/starship/starship.toml to have inside zsh folder.
export WAYFIRE_CONFIG_FILE=$HOME/.config/wayfire/wayfire.ini # Instead of $HOME/.config/wayfire.ini
#+end_src

# RUST ENV (gentoo) #
#export RUSTC_WRAPPER=/usr/bin/sccache
#export SCCACHE_DIR=/var/cache/sccache
#export SCCACHE_MAX_FRAME_LENGTH=104857600

** History

Remember to *$ mkdir ~/.cache/zsh*
HISTIGNORE='ls:ll:ls -alh:pwd:clear:history' # Not working, bash?

#+begin_src bash
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.cache/zsh/history
HISTORY_IGNORE="(ls|ls *|cd|cd *|bat *|cat *|pwd|clear|history)"
#+end_src

** Screensaver - TRAPALRM

Runs an app when the terminal timeouts.
Specified in seconds.

#+begin_src bash
TMOUT=420
TRAPALRM() { unimatrix -s 93 }
#TRAPALRM() { pipes-rs }
#+end_src

** Prompt - Starship

+ [[https://starship.rs/][starship.rs - Cross-Shell Prompt]]
+ [[https://github.com/starship/starship][github page]]

Prompt configuration file located [[https://github.com/asynthe/dots/blob/main/app/starship/starship.toml][here]].

#+begin_src bash
eval "$(starship init zsh)"
#eval "$(starship init bash)" # if .bashrc
#+end_src

** Prompt - Custom (Disabled)
#+begin_src bash
#PROMPT="> "
#RPROMPT="にゃ~"
#RPROMPT="]"
#+end_src

** direnv

+ [[https://direnv.net][main page]]
+ [[https://github.com/direnv/direnv][github page]]

#+begin_src bash
eval "$(direnv hook zsh)"
#+end_src

** Keybinds

#+begin_src bash
setopt extended_glob
setopt no_flowcontrol
# shopt autocd for bashrc # cd with ..
#+end_src

Get the Keyboard Input key/code with
*$ showkey -a*

See *showkey -a* for checking the keyboard input, also *^M binding gives an error*.

|----------+----------------------------------------|
| Keybind  | Description                            |
|----------+----------------------------------------|
| Ctrl + A | lf file explorer (+ previewer, + lfcd) |
| Ctrl + S | vis (audio visualizer)                 |
| Ctrl + D | Close terminal                        |
| Ctrl + o | Decrease volume %5                    |
| Ctrl + p | Increase volume %5                    |
| Start    | Start of line                          |
| End      | End of line                            |
|----------+----------------------------------------|

bindkey -s '^[[Z' 'ls^M'
# do ls in middle of a command, show files
# then return same command as it was left before.

*Home / End Key*
#+begin_src bash
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line
#+end_src

*Volume Up / Down %5*
#+begin_src bash
#bindkey -s '^I' 'pactl set-sink-volume 0 -5%; clear^M'
#bindkey -s '^O' 'pactl set-sink-volume 0 +5%; clear^M'
#+end_src

*Keyboard Shortcuts*
#+begin_src bash
bindkey -s '^Q' 'qalc^M'
bindkey -s '^E' 'srczsh; clear^M'
bindkey -s '^T' 'tmux^M'

bindkey -r '^F'
bindkey -s '^F' 'lf^M'

bindkey -r '^V'
bindkey -s '^V' 'cava^M'

bindkey -s '^B' 'bluetuith^M'
bindkey -s '^N' 'ncmpcpp^M'
bindkey -s '^X' 'nvim^M'
#+end_src

*Unbinded keys*
#+begin_src bash
bindkey -r '^Z' # Unbinded for tmux zoom pane instead of send into bg.
#+end_src

* Plugins
** Vi Mode (zsh-vi-mode)

+ [[https://github.com/jeffreytse/zsh-vi-mode][gitHub page]]

#+begin_src bash
function zvm_config() {
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT

  ZVM_CURSOR_STYLE_ENABLED=true
  
  ZVM_NORMAL_MODE_CURSOR=$ZVM_CURSOR_BLOCK
  ZVM_INSERT_MODE_CURSOR=$ZVM_CURSOR_BLINKING_UNDERLINE
}

source $ZDOTDIR/plugin/zsh-vi-mode/zsh-vi-mode.plugin.zsh
#+end_src

** Autocomplete (zsh-autocomplete)

+ [[https://github.com/marlonrichert/zsh-autocomplete][github page]]

##+begin_src bash
source $ZDOTDIR/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
##+end_src

** Autosuggestions (zsh-autosuggestions) [Disabled for now]

+ [[https://github.com/zsh-users/zsh-autosuggestions][github page]]

#+begin_src bash
source $ZDOTDIR/plugin/zsh-autosuggestions/zsh-autosuggestions.zsh
#+end_src

** Syntax Highlighting (zsh-syntax-highlighting)

+ [[https://github.com/zsh-users/zsh-syntax-highlighting][github page]]

#+begin_src bash
source $ZDOTDIR/plugin/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#+end_src

** pywal
:PROPERTIES:
:ID:       7dcdd13b-a758-4f51-8a25-eae1fbe4233b
:END:

+ [[https://github.com/dylanaraps/pywal/wiki/Customization#rofi][pywal / customization - github page]]
+ [[https://itsfoss.com/pywal][Automatically Change Color Scheme of Your Linux Terminal Based on Your Wallpaper - IT'S FOSS]]

Specify a image, and it will create a color pallete for it.
$ wal -i <path/to/image>

This will not work for new terminals, to fix this we need to _add the next to the end_ of *.bashrc* / *.zshrc*

To add support for TTYs this line can be optionally added.
*source ~/.cache/wal/colors-tty.sh*
_note_: Not working for me.

Import colorscheme from 'wal' asynchronously
&   -> Run the process in the background.
( ) -> Hide shell job control messages.

#+begin_src bash
#(cat ~/.cache/wal/sequences &)
#cat ~/.cache/wal/sequences # Alternative (blocks terminal for 0-3ms)
#+end_src

* Aliases
** System

Fix for audio buzzing (arch / gentoo)
*alias echo-off='doas echo 0 | doas tee /sys/module/snd_hda_intel/parameters/power_save && doas echo 0 | doas tee /sys/module/snd_hda_intel/parameters/power_save_controller'*

** Package Manager
*** NixOS

*Flake*
#+begin_src bash
alias update='nix flake update "/home/asynthe/sync/system/flake"'
alias upgrade='doas nixos-rebuild switch --flake "/home/asynthe/sync/system/flake"'
alias gc='doas nix-collect-garbage -d'
#+end_src

*** Gentoo

*Portage*
#+begin_src bash
#alias emerge='doas emerge --ask'
#alias sync='doas emerge --sync'
#alias update='doas emerge -auvDN --keep-going @world'
#alias deselect='doas emerge --ask --deselect'
#alias clean='doas emerge --ask --depclean'
#alias makeconf='doas nvim /etc/portage/make.conf'
#alias dispatch='doas dispatch-conf'
#alias search='doas emerge --search'
#alias list-repo='eselect list'
#alias add-repo='doas eselect repository enable'
#alias del-repo=''
#+end_src

** Main

#alias off='doas poweroff'
#alias off='doas shutdown now'
alias restart='doas reboot'
alias fstab='doas nvim /etc/fstab'

One letter aliases!

#+begin_src bash
alias m='ncmpcpp'
alias @='neomutt'
alias n='nvim'
alias v='pulsemixer'
alias vv='alsamixer'
alias w='watch'
#+end_src

#+begin_src bash
alias cp='rsync -ah --info=progress2'

alias h='history | sk'
alias -g c='bat' # cat -> bat
#alias -g cat='bat' # Problems with pywal

# CD -> Zoxide (?)
alias ,='cd -'
alias ..='cd ..'

# GREP
alias grep='grep -i --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
#+end_src

*trashy*
#+begin_src bash
# Trash bin - trashy
#alias tr='trash'
#alias rm='echo "This is not the command you are looking for."; false'
#alias nil-tr='trash empty'
#+end_src

*ls -> eza*
- [[https://github.com/eza-community/eza][eza - GitHub page]]

#+begin_src bash
alias ls='eza --icons --group-directories-first'
alias la='eza --icons -a --group-directories-first'
alias ll='eza --long --group-directories-first'
alias lla='eza --long -a --group-directories-first'
alias lg='eza --long --git --group-directories-first'
#+end_src

** Mistake

#+begin_src bash
alias fuck='doas !!'
alias sl='ls'

alias focker='docker'
alias dicker='docker'
alias dokcer='docker'
#+end_src

** Useful

Size of directories
#+begin_src bash
alias dsize='ncdu ${pwd}'
#+end_src

Which?
#+begin_src bash
alias wshell='which $SHELL'
# XDG-MIME
alias wtype='xdg-mime query filetype'
alias wapp='xdg-mime query default' 
#+end_src

** Apps
*** emacs / nvim - Text editors
*** lf - File manager

alias img='nsxiv -t "." & disown & exit'

#+begin_src bash
#alias h='history | grep --color=auto'
alias irc='tmux attach-session -t weechat'
alias t='peaclock --config-dir ~/.config/peaclock'
alias time='peaclock --config-dir ~/.config/peaclock'
alias wtr='curl wttr.in/Perth'

alias bt='bluetuith'
alias -g pdf='zathura'
alias -g info='mediainfo'
#+end_src

*yt-dlp*
[add github link]
#+begin_src bash
alias yt='yt-dlp -f "bv[ext=mp4]+ba[ext=m4a]" --merge-output-format mp4'
alias yt-mp3='yt-dlp -f "ba" -x --audio-format mp3'
#+end_src

*Emacs / nvim*
#+begin_src bash
alias emacs='emacsclient -c -s emacs -a emacs'
alias -g nv='nvim' 
alias -g nvv='doas nvim'
#+end_src

*LibreOffice*
#+begin_src bash
alias doc='libreoffice'
alias docx='libreoffice'
alias word='libreoffice'
alias excel='libreoffice'
#+end_src

*3D Modeller*
#+begin_src bash
alias fstl='nvidia fstl'
alias f3d='nvidia f3d'
#+end_src

** Dev

#+begin_src bash
alias p='python'
#+end_src

** Wallpaper - swww / mpvpaper [Wayland]

- [[https://github.com/Horus645/swww][github page]]

image -> random (
video -> choose (playlist, loop, tv, video, video-no-audi, video-loop) -> choose (which playlist, loop, video, iptv country, or video to loop) -> play
alias video-na='fd . ~/sync/system/wallpaper/video -e mp4 | sk | xargs mpvpaper -v -p -o "no-audio loop-file=inf" "*"'
alias video-drilling='mpvpaper -v -s -o "no-audio shuffle loop-playlist=inf" "*" ~/sync/system/wallpaper/video/drilling/playlist.m3u'

+ no audio as an option (for video, playlist)?
+ shuffle as an option (for playlist)?
+ maybe just a menu with different options to add to mpvpaper

#+begin_src bash
alias swww-random='~/sync/archive/script/bash/swww/randomize.sh /home/asynthe/sync/system/wallpaper/favourite'
alias wall='fd . ~/sync/archive/wallpaper/img -e jpg -e png | sk | xargs swww img'
alias wallp='fd . ~/sync/archive/wallpaper/img -e jpg -e png | sk | tee >(xargs wal -i) >(xargs swww img)'
alias wallpy='fd . ~/sync/archive/wallpaper -e jpg -e png | ~/script/bash/fzf_preview | tee >(xargs wal -i) >(xargs swww img)'
#+end_src

** Video Wallpaper - mpvpaper [Wayland]

> [[https://github.com/GhostNaN/mpvpaper][github page]]

_note_: n

#+begin_src bash
alias video='fd . ~/sync/archive/wallpaper/video -e mp4 | sk | xargs mpvpaper -v -p -o "loop-file=inf" "*"'
alias loop='fd . ~/sync/system/wallpaper/loop -e mp4 | sk | xargs mpvpaper -v -s -o "loop-file=inf" eDP-1'

# TESTING #
alias pl='mpvpaper -v -s -o "shuffle loop-playlist=inf" "*" ~/sync/system/wallpaper/video/anime_playlist.m3u'
alias pl-na='mpvpaper -v -s -o "no-audio shuffle loop-playlist=" "*" ~/sync/system/wallpaper/video/anime_playlist.m3u'
alias tv-jp='mpvpaper -v -s "*" https://iptv-org.github.io/iptv/countries/jp.m3u'
alias tv-cl='mpvpaper -v -s "*" https://iptv-org.github.io/iptv/countries/cl.m3u'
alias tv-au='mpvpaper -v -s "*" https://i.mjh.nz/au/Perth/raw-tv.m3u8'
#+end_src

** Scripts

#+begin_src bash
alias nvidia='~/sync/system/script/bash/nvidia_offload'
alias lock='~/sync/system/script/dots/lock_wp.sh'
alias msg='~/sync/system/script/gpg/message.sh'
#+end_src

** Networking

#+begin_src bash
alias nm='doas nmtui'
alias ports='ss -tulanp'
alias port='ss -naptu state listening'
alias ifconfig='echo "ipconfig is deprecated, use ip instead."; false'
#alias scan='iwctl station wlan0 scan' # not using iwd now
#+end_src

** Flatpak / Other

#+begin_src bash
alias fightcade='flatpak run com.fightcade.Fightcade'
alias pinball='flatpak run com.github.k4zmu2a.spacecadetpinball'
alias upscayl='flatpak run org.upscayl.Upscayl'
#+end_src

** Other

*Fun*
#+begin_src bash
alias rickroll='curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash'
#+end_src

*Listen to the kernel's soul*
#+begin_src bash
alias kernel-soul='aplay -c 2 -f S16_LE -r 44100 /dev/random'
alias kernel-soul-8hz='aplay /dev/random'
alias kernel-soul-pa='pacat /dev/urandom'
#+end_src

** WMs

*Hyprland*
#+begin_src bash
alias hypr='dbus-run-session Hyprland'
alias ani-on='hyprctl keyword animations:enabled 1'
alias ani-off='hyprgame'
#+end_src

** Book

/The solution was always there./

To add: zathura will still run without a path if sk has exited, so make sk do a stderr
- Maybe doing some bash scripting

_note_: Be careful with '' and "" always use a different one inside the command, as fd may not work if you use '' (As zsh aliases also use '').
  
#+begin_src bash
alias book='fd . ~/sync/study/book --type f -e "pdf" -e "epub" | sk | xargs zathura'
alias books='fd . ~/sync/archive/book --type f -e "pdf" -e "epub" | sk | xargs zathura'
alias bookjp='fd . ~/sync/archive/jp/book -e "pdf" -e "epub" | sk | xargs zathura'
#+end_src

** Testing

# Wine
alias vn32='LC_ALL="ja_JP.UTF-8" TZ="Asia/Tokyo" WINEPREFIX=/home/asynthe/wine/pfx32 WINEARCH=win32 wine'
alias iidx='LC_ALL="ja_JP.UTF-8" TZ="Asia/Tokyo" WINEPREFIX=/home/asynthe/wine/iidx/pfx WINEARCH=win64 wine /home/asynthe/wine/iidx/contents/spice64.exe'
#alias winjp=''
#alias vn64=''
#win32() {
#    export WINEARCH=win32
#    export WINEPREFIX=~/.win32
#win64() {
#    export WINEARCH=win64
#    export WINEPREFIX=~/.win64

* App
** lf

I guess i'll just stick to lf with preview and other things.

#+begin_src bash
lfcd () {
    # `command` is needed in case `lfcd` is aliased to `lf`
    cd "$(command lf -print-last-dir "$@")"
}

#bindkey -s '^o' 'lfcd\n'
alias lf='lfcd'
#+end_src

** yazi

#+begin_src bash
function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
alias yazi='yy'
#+end_src
